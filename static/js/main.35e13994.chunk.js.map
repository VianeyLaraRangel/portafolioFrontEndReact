{"version":3,"sources":["Components/LandingPage.js","Components/AboutMe.js","Components/Contact.js","Components/Projects.js","Components/Resume.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Landing","style","width","margin","className","col","src","alt","Component","About","Contact","Projects","Resume","Main","exact","path","component","AboutMe","App","title","scroll","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8PAqBeA,E,iLAhBP,OACI,yBAAKC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SACjC,kBAAC,OAAD,CAAMC,UAAU,gBACZ,kBAAC,OAAD,CAAMC,IAAK,IACP,yBACIC,IAAI,0CACJC,IAAI,sBACJH,UAAU,sB,GAThBI,aCOPC,E,iLANP,OACI,6BAAK,oD,GAHID,aCQNE,E,iLANP,OACI,6BAAK,6C,GAHMF,aCQRG,E,iLANP,OACI,6BAAK,8C,GAHOH,aCQTI,E,iLANP,OACI,6BAAK,wD,GAHIJ,aCgBNK,EAVF,kBACT,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhB,IACjC,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,WAAWC,UAAWC,IACxC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,WAAWC,UAAWN,IACxC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,YAAYC,UAAWL,IACzC,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAUC,UAAWJ,M,QC+ChCM,G,+LAnDT,OACE,yBAAKd,UAAU,oBACX,kBAAC,SAAD,KACI,kBAAC,SAAD,CACAA,UAAU,eACVe,MAAM,cACNC,QAAM,GACF,kBAAC,UAAD,KACI,yBAAKhB,UAAU,YACX,yBACAA,UAAU,aACVE,IAAI,mDACJC,IAAI,iBAGZ,kBAAC,aAAD,CAAYH,UAAU,gBAClB,kBAAC,IAAD,CAAMiB,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,mBACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,kBAAC,SAAD,CACAjB,UAAU,mBAGF,yBAAKA,UAAU,mBACX,yBACIE,IAAI,0CACJC,IAAI,sBACJH,UAAU,uBAItB,kBAAC,aAAD,CAAYA,UAAU,eAClB,kBAAC,IAAD,CAAMiB,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,mBACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,aAGR,kBAAC,UAAD,KACI,yBAAKjB,UAAU,iBACf,kBAAC,EAAD,a,GA7CFI,cCIEc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,cCPNC,IAASC,OACL,kBAAC,IAAD,KACA,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.35e13994.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%', margin: 'auto' }}>\r\n                <Grid className=\"landing-grid\">\r\n                    <Cell col={12}>\r\n                        <img\r\n                            src=\"https://i.ibb.co/9V94KV9/vianeylara.jpg\"\r\n                            alt=\"VianeyLara´s pic\"\r\n                            className=\"avatar-img\"\r\n                        />\r\n                    </Cell>\r\n                </Grid>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\n\r\nclass About  extends Component {\r\n    render() {\r\n        return(\r\n            <div><h1>Acerca de mí</h1></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Contact  extends Component {\r\n    render() {\r\n        return(\r\n            <div><h1>Contacto</h1></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\n\r\nclass Projects  extends Component {\r\n    render() {\r\n        return(\r\n            <div><h1>Proyectos</h1></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, { Component } from 'react';\r\n\r\nclass Resume extends Component {\r\n    render() {\r\n        return(\r\n            <div><h1>Página principal</h1></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Landing from './LandingPage';\r\nimport AboutMe from './AboutMe';\r\nimport Contact from './Contact';\r\nimport Projects from './Projects';\r\nimport Resume from './Resume';\r\n\r\nconst Main = () => (\r\n    <Switch>\r\n        <Route exact path=\"/\" component={Landing} />\r\n        <Route exact path=\"/aboutme\" component={AboutMe} />\r\n        <Route exact path=\"/contact\" component={Contact} />\r\n        <Route exact path=\"/projects\" component={Projects} />\r\n        <Route exact path=\"/resume\" component={Resume} />\r\n    </Switch>\r\n)\r\n\r\nexport default Main;","import React, { Component } from 'react';\r\nimport { Layout, Header, Navigation, Drawer, Content } from 'react-mdl';\r\nimport Main from './Components/Main';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './App.css';\r\nimport './Responsive.css';\r\n\r\nclass App extends Component {\r\n  render () {\r\n      return (\r\n        <div className=\"demo-big-content\">\r\n            <Layout>\r\n                <Header \r\n                className=\"header-color\" \r\n                title=\"Vianey Lara\" \r\n                scroll>\r\n                    <Content>\r\n                        <div className=\"box-logo\">\r\n                            <img \r\n                            className=\"logo-brand\"\r\n                            src=\"https://i.ibb.co/fCqCmGm/logo-Vi-La-Ra2-2-ok.png\" \r\n                            alt=\"LogoViLaRa\"/>\r\n                        </div>\r\n                    </Content>\r\n                    <Navigation className=\"link-desktop\">\r\n                        <Link to=\"/resume\">Resume</Link>\r\n                        <Link to=\"/aboutme\">Acerca de mí</Link>\r\n                        <Link to=\"/projects\">Proyectos</Link>\r\n                        <Link to=\"/contact\">Contact</Link>\r\n                    </Navigation>\r\n                </Header>\r\n                <Drawer \r\n                className=\"hamburguer-menu\" \r\n                >\r\n                    {/* <Content> */}\r\n                        <div className=\"box-logo-drawer\">\r\n                            <img\r\n                                src=\"https://i.ibb.co/9V94KV9/vianeylara.jpg\"\r\n                                alt=\"VianeyLara´s pic\"\r\n                                className=\"avatar-img-drawer\"\r\n                            />\r\n                        </div>\r\n                    {/* </Content> */}\r\n                    <Navigation className=\"link-mobile\">\r\n                        <Link to=\"/resume\">Resume</Link>\r\n                        <Link to=\"/aboutme\">Acerca de mí</Link>\r\n                        <Link to=\"/projects\">Proyectos</Link>\r\n                        <Link to=\"/contact\">Contact</Link>\r\n                    </Navigation>\r\n                </Drawer>\r\n                <Content>\r\n                    <div className=\"page-content\" />\r\n                    <Main/>\r\n                </Content>\r\n            </Layout>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'react-mdl/extra/material.css';\r\nimport 'react-mdl/extra/material.js';\r\n\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}